"""Initial schema with 11 tables

Revision ID: 478f10e5708e
Revises: 
Create Date: 2025-10-20 02:18:35.271724

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '478f10e5708e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.String(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=False),
    sa.Column('season_start_date', sa.Date(), nullable=False),
    sa.Column('season_end_date', sa.Date(), nullable=False),
    sa.Column('season_length_weeks', sa.Integer(), nullable=False),
    sa.Column('archetype', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("archetype IN ('FASHION_RETAIL', 'STABLE_CATALOG', 'CONTINUOUS')", name='check_archetype'),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('season_parameters',
    sa.Column('parameter_id', sa.String(), nullable=False),
    sa.Column('forecast_horizon_weeks', sa.Integer(), nullable=False),
    sa.Column('season_start_date', sa.Date(), nullable=False),
    sa.Column('replenishment_strategy', sa.String(), nullable=False),
    sa.Column('dc_holdback_percentage', sa.Float(), nullable=False),
    sa.Column('markdown_checkpoint_week', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("replenishment_strategy IN ('none', 'weekly', 'bi-weekly')", name='check_replenishment_strategy'),
    sa.CheckConstraint('dc_holdback_percentage >= 0 AND dc_holdback_percentage <= 1', name='check_holdback_pct'),
    sa.CheckConstraint('forecast_horizon_weeks >= 1 AND forecast_horizon_weeks <= 52', name='check_horizon_weeks'),
    sa.CheckConstraint('markdown_checkpoint_week IS NULL OR (markdown_checkpoint_week >= 1 AND markdown_checkpoint_week <= 12)', name='check_markdown_week'),
    sa.PrimaryKeyConstraint('parameter_id')
    )
    op.create_table('store_clusters',
    sa.Column('cluster_id', sa.String(), nullable=False),
    sa.Column('cluster_name', sa.String(), nullable=False),
    sa.Column('fashion_tier', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("fashion_tier IN ('PREMIUM', 'MAINSTREAM', 'VALUE')", name='check_fashion_tier'),
    sa.PrimaryKeyConstraint('cluster_id')
    )
    op.create_table('workflow_logs',
    sa.Column('log_id', sa.String(), nullable=False),
    sa.Column('workflow_id', sa.String(), nullable=False),
    sa.Column('agent_name', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("status IN ('started', 'completed', 'failed')", name='check_status'),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index('idx_workflow_logs_workflow', 'workflow_logs', ['workflow_id'], unique=False)
    op.create_table('forecasts',
    sa.Column('forecast_id', sa.String(), nullable=False),
    sa.Column('category_id', sa.String(), nullable=False),
    sa.Column('season', sa.String(), nullable=False),
    sa.Column('forecast_horizon_weeks', sa.Integer(), nullable=False),
    sa.Column('total_season_demand', sa.Integer(), nullable=False),
    sa.Column('weekly_demand_curve', sa.JSON(), nullable=False),
    sa.Column('peak_week', sa.Integer(), nullable=False),
    sa.Column('forecasting_method', sa.String(), nullable=False),
    sa.Column('models_used', sa.JSON(), nullable=False),
    sa.Column('prophet_forecast', sa.Integer(), nullable=True),
    sa.Column('arima_forecast', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('total_season_demand >= 0', name='check_total_demand'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.PrimaryKeyConstraint('forecast_id')
    )
    op.create_table('stores',
    sa.Column('store_id', sa.String(), nullable=False),
    sa.Column('store_name', sa.String(), nullable=False),
    sa.Column('cluster_id', sa.String(), nullable=False),
    sa.Column('store_size_sqft', sa.Integer(), nullable=False),
    sa.Column('location_tier', sa.String(), nullable=False),
    sa.Column('median_income', sa.Integer(), nullable=False),
    sa.Column('store_format', sa.String(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('avg_weekly_sales_12mo', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("location_tier IN ('A', 'B', 'C')", name='check_location_tier'),
    sa.CheckConstraint("region IN ('NORTHEAST', 'SOUTHEAST', 'MIDWEST', 'WEST')", name='check_region'),
    sa.CheckConstraint("store_format IN ('MALL', 'STANDALONE', 'SHOPPING_CENTER', 'OUTLET')", name='check_store_format'),
    sa.ForeignKeyConstraint(['cluster_id'], ['store_clusters.cluster_id'], ),
    sa.PrimaryKeyConstraint('store_id')
    )
    op.create_table('actual_sales',
    sa.Column('actual_id', sa.String(), nullable=False),
    sa.Column('store_id', sa.String(), nullable=False),
    sa.Column('forecast_id', sa.String(), nullable=False),
    sa.Column('week_number', sa.Integer(), nullable=False),
    sa.Column('units_sold', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('units_sold >= 0', name='check_units_sold'),
    sa.CheckConstraint('week_number >= 1 AND week_number <= 12', name='check_week_number'),
    sa.ForeignKeyConstraint(['forecast_id'], ['forecasts.forecast_id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.store_id'], ),
    sa.PrimaryKeyConstraint('actual_id')
    )
    op.create_index('idx_actual_sales_forecast_week', 'actual_sales', ['forecast_id', 'week_number'], unique=False)
    op.create_table('allocations',
    sa.Column('allocation_id', sa.String(), nullable=False),
    sa.Column('forecast_id', sa.String(), nullable=False),
    sa.Column('manufacturing_qty', sa.Integer(), nullable=False),
    sa.Column('safety_stock_percentage', sa.Float(), nullable=False),
    sa.Column('initial_allocation_total', sa.Integer(), nullable=False),
    sa.Column('holdback_total', sa.Integer(), nullable=False),
    sa.Column('store_allocations', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('manufacturing_qty >= 0', name='check_manufacturing_qty'),
    sa.CheckConstraint('safety_stock_percentage >= 0 AND safety_stock_percentage <= 1', name='check_safety_stock'),
    sa.ForeignKeyConstraint(['forecast_id'], ['forecasts.forecast_id'], ),
    sa.PrimaryKeyConstraint('allocation_id')
    )
    op.create_table('forecast_cluster_distribution',
    sa.Column('distribution_id', sa.String(), nullable=False),
    sa.Column('forecast_id', sa.String(), nullable=False),
    sa.Column('cluster_id', sa.String(), nullable=False),
    sa.Column('allocation_percentage', sa.Float(), nullable=False),
    sa.Column('total_units', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('allocation_percentage >= 0 AND allocation_percentage <= 1', name='check_allocation_pct'),
    sa.CheckConstraint('total_units >= 0', name='check_total_units'),
    sa.ForeignKeyConstraint(['cluster_id'], ['store_clusters.cluster_id'], ),
    sa.ForeignKeyConstraint(['forecast_id'], ['forecasts.forecast_id'], ),
    sa.PrimaryKeyConstraint('distribution_id')
    )
    op.create_table('historical_sales',
    sa.Column('sale_id', sa.String(), nullable=False),
    sa.Column('store_id', sa.String(), nullable=False),
    sa.Column('category_id', sa.String(), nullable=False),
    sa.Column('week_start_date', sa.Date(), nullable=False),
    sa.Column('units_sold', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('units_sold >= 0', name='check_units_sold'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.store_id'], ),
    sa.PrimaryKeyConstraint('sale_id')
    )
    op.create_index('idx_historical_sales_date', 'historical_sales', ['week_start_date'], unique=False)
    op.create_index('idx_historical_sales_store_category', 'historical_sales', ['store_id', 'category_id'], unique=False)
    op.create_table('markdowns',
    sa.Column('markdown_id', sa.String(), nullable=False),
    sa.Column('forecast_id', sa.String(), nullable=False),
    sa.Column('week_number', sa.Integer(), nullable=False),
    sa.Column('sell_through_pct', sa.Float(), nullable=False),
    sa.Column('target_sell_through_pct', sa.Float(), nullable=False),
    sa.Column('gap_pct', sa.Float(), nullable=False),
    sa.Column('recommended_markdown_pct', sa.Float(), nullable=False),
    sa.Column('elasticity_coefficient', sa.Float(), nullable=False),
    sa.Column('expected_demand_lift_pct', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('reasoning', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("status IN ('pending', 'approved', 'applied')", name='check_status'),
    sa.CheckConstraint('recommended_markdown_pct >= 0 AND recommended_markdown_pct <= 0.40', name='check_markdown_pct'),
    sa.CheckConstraint('sell_through_pct >= 0 AND sell_through_pct <= 1', name='check_sell_through'),
    sa.CheckConstraint('week_number >= 1 AND week_number <= 12', name='check_week_number'),
    sa.ForeignKeyConstraint(['forecast_id'], ['forecasts.forecast_id'], ),
    sa.PrimaryKeyConstraint('markdown_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('markdowns')
    op.drop_index('idx_historical_sales_store_category', table_name='historical_sales')
    op.drop_index('idx_historical_sales_date', table_name='historical_sales')
    op.drop_table('historical_sales')
    op.drop_table('forecast_cluster_distribution')
    op.drop_table('allocations')
    op.drop_index('idx_actual_sales_forecast_week', table_name='actual_sales')
    op.drop_table('actual_sales')
    op.drop_table('stores')
    op.drop_table('forecasts')
    op.drop_index('idx_workflow_logs_workflow', table_name='workflow_logs')
    op.drop_table('workflow_logs')
    op.drop_table('store_clusters')
    op.drop_table('season_parameters')
    op.drop_table('categories')
    # ### end Alembic commands ###
